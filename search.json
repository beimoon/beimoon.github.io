[{"url":"/2023/03/10/hello-world/","content":"Hexo博客 https://couriourc.github.io/\n\n初始化Hexo\n\nHexo 主题 hexo-theme-keep https://keep-docs.xpoet.cn/\nnpm install hexo-theme-keep\n\nHexo常见指令\n\n\n\n指令\n说明\n\n\n\nhexo clean &amp;&amp; hexo g\n清除本地项目并重新生成 （重新部署时使用）\n\n\nhexo g\n重新生成\n\n\nHexo s\n开启本地预览\n\n\nHexo d\n推送到github\n\n\n\n部署到github\n\n\n\n"},{"url":"/2023/03/10/C/","content":"详解const int* 与 int const*的区别:const默认作用于其左边的东西，如果左边没东西，则作用于其右边的东西。\n例如，\n\nconst int*\nconst 要作用于左边的东西，但是左边没东西，所以const修饰int成常量整型，然后*再作用于常量整型。所以这是a pointer to a constant integer（指向一个整型，不可通过该指针改变其指向的内容，但可改变指针本身所指向的地址）\n\n**int const ***\n再看这个，const左边有东西，所以const作用于int，*再作用于int const所以这还是 a pointer to a constant integer（同上）。\n\nint const*\n这个const的左边是*，所以const作用于指针（不可改变指向的地址），所以这是a constant pointer to an integer，可以通过指针改变其所指向的内容但只能指向该地址，不可指向别的地址。\n\nconst int const*\n这里有两个const。左边的const 的左边没东西，右边有int那么此const修饰int。右边的const作用于*使得指针本身变成const（不可改变指向地址），那么这个是a constant pointer to a constant integer，不可改变指针本身所指向的地址也不可通过指针改变其指向的内容。\n\nint const * const\n这里也出现了两个const，左边都有东西，那么左边的const作用于int，右边的const作用于*，于是这个还是是a constant pointer to a constant integer。\n\n\nC语言指针：指针本质就是变量\n#include &lt;stdio.h&gt;void change(int* p, int* pj)&#123;\tp = pj;&#125;void change1(int* p, int* pj)&#123;\t*p = pj;&#125;void change2(int* p, int* pj)&#123;\t*p = pj;&#125;//const默认作用于其左边的东西，如果左边没东西，则作用于其右边的东西。int main() &#123;\tint i = 10;\tint j = 5;\tint* pi;\tint* pj;\tpi = &amp;i;\tpj = &amp;j;\tchange1(&amp;pi, pj);\tint age1 = 10;\tint* ph;\tph = &amp;age1;\tconst int * age=ph;\tage = &amp;age1;\t\tprintf(&quot;%d\\n&quot;, *age);\tprintf(&quot;%d\\n%d\\n%d\\n&quot;, i, *pi, *pj);\tsystem(&quot;pause&quot;);&#125;\n\n"}]