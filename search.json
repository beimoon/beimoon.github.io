[{"url":"/2023/03/10/C/","content":"详解const int* 与 int const*的区别:const默认作用于其左边的东西，如果左边没东西，则作用于其右边的东西。\n例如，\n\nconst int*\nconst 要作用于左边的东西，但是左边没东西，所以const修饰int成常量整型，然后*再作用于常量整型。所以这是a pointer to a constant integer（指向一个整型，不可通过该指针改变其指向的内容，但可改变指针本身所指向的地址）\n\n**int const ***\n再看这个，const左边有东西，所以const作用于int，*再作用于int const所以这还是 a pointer to a constant integer（同上）。\n\nint const*\n这个const的左边是*，所以const作用于指针（不可改变指向的地址），所以这是a constant pointer to an integer，可以通过指针改变其所指向的内容但只能指向该地址，不可指向别的地址。\n\nconst int const*\n这里有两个const。左边的const 的左边没东西，右边有int那么此const修饰int。右边的const作用于*使得指针本身变成const（不可改变指向地址），那么这个是a constant pointer to a constant integer，不可改变指针本身所指向的地址也不可通过指针改变其指向的内容。\n\nint const * const\n这里也出现了两个const，左边都有东西，那么左边的const作用于int，右边的const作用于*，于是这个还是是a constant pointer to a constant integer。\n\n\nC语言指针：指针本质就是变量\n#include &lt;stdio.h&gt;void change(int* p, int* pj)&#123;\tp = pj;&#125;void change1(int* p, int* pj)&#123;\t*p = pj;&#125;void change2(int* p, int* pj)&#123;\t*p = pj;&#125;//const默认作用于其左边的东西，如果左边没东西，则作用于其右边的东西。int main() &#123;\tint i = 10;\tint j = 5;\tint* pi;\tint* pj;\tpi = &amp;i;\tpj = &amp;j;\tchange1(&amp;pi, pj);\tint age1 = 10;\tint* ph;\tph = &amp;age1;\tconst int * age=ph;\tage = &amp;age1;\t\tprintf(&quot;%d\\n&quot;, *age);\tprintf(&quot;%d\\n%d\\n%d\\n&quot;, i, *pi, *pj);\tsystem(&quot;pause&quot;);&#125;\n\n"},{"url":"/2023/03/10/hello-world/","content":"Hexo博客 https://couriourc.github.io/\n\n初始化Hexo\n\nHexo 主题 hexo-theme-keep https://keep-docs.xpoet.cn/\nnpm install hexo-theme-keep\n\nHexo常见指令\n\n\n\n指令\n说明\n\n\n\nhexo clean &amp;&amp; hexo g\n清除本地项目并重新生成 （重新部署时使用）\n\n\nhexo g\n重新生成\n\n\nHexo s\n开启本地预览\n\n\nHexo d\n推送到github\n\n\n\n部署到github\n\n\n\n"},{"url":"/2023/03/11/get6/","content":"****书信：I was delighted&#x2F;glad to receive your letter.\nI am looking forward to receiving your letter.\nYours sincerely，Li Hua\n开头：when it comes to (doing) sth，it is imposible to overstate the significance to paying close attention to it.Simultaneously , it is especially vital for (doing) sth , which is also of crucial of importance in (doing) sth .Therefore， my views are as follows.分析出3点1.多使用非谓语 一句强调句 一句倒装句（任意倒装）一句虚拟语气 状语2.连接词3.高级词汇\n中间连接词：强调：indeedly ， undoubtedly ，obviously ，certainly ， above all ，apparently（显然）对比：however， ， by contrast ，unfortunately列举： for instance ， To begin with , secondly , last but not least解释： in other words , as a mater of fact（事实是）， namely （换言之）最后： ultimately ， eventually原因： due to ， owing to结果： consequently 总结： in conclusion\n虚拟：it is high time that + 句子 （did&#x2F;should do sth） 是做什么的时候了it is high time that we need to emphasis on A.\n倒装句：确定倒装位置紧抓两点：1.主句所在的位置需倒装；2.否定所在的句子需倒装not only but also1.Not until she saw the present did she feel happy.2.Not only should we pay more attention to the balanced diets, but also we ought to regularly do exercises.3.All in all, we should attach more attention to the importance of our environment. 改为倒装句 否定+反义词&#x3D;原词All in all, in no way can we afford to neglect the importance of our environment.\n强调句：需要完整的句子it is 被强调部分 that 其余部分 .In addition to A ,it is B that we need to emphasis on .\n非谓语：ing done todo抓出主谓宾 然后添加修饰成分\n词汇：adj：delightful ， transparent ， prominent ，noteworthy ， incredible ， incredible（极好） credible（可靠）v：maintain（think）n:individuals ， the adj 一类人 the rich （the affluent）\nwe could gains affluent spirit by  communicating with the Virtuous。我们可以通过与贤者沟通来获得富足的精神\n结尾：Only in this way can we do sth.as it  konwn to all，Every coin has two sides and ······is not an exception.It has both advantages and disadvantages. one — the other—Personally, I believe that_. Consequently, I’m confident that a bright future is awaiting us because__.\n\n"},{"url":"/2023/03/13/vs2022%E6%B7%BB%E5%8A%A0code%20snippet/","content":"vs2022添加code snippet：\n准备Square Root.snippet文件 xml语法\n\n导入准备好的文件\n\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;CodeSnippets xmlns=&quot;http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet&quot;&gt;  &lt;CodeSnippet Format=&quot;1.0.0&quot;&gt;    &lt;Header&gt;      &lt;Title&gt;Square Root&lt;/Title&gt;       //这是代码代码快捷      &lt;Shortcut&gt;#c&lt;/Shortcut&gt;      &lt;Description&gt;C语言的部分结构&lt;/Description&gt;      &lt;Author&gt;AAA&lt;/Author&gt;    &lt;/Header&gt;    &lt;Snippet&gt;      &lt;Code Language=&quot;CPP&quot;&gt;        &lt;![CDATA[\t\t//下面是具体的代码\t\t\t#include &lt;stdio.h&gt;        \t#include &lt;stdlib.h&gt;            int main()            &#123;            printf(&quot;\\n&quot;);            system(&quot;pause&quot;);            return 0;            &#125;]]&gt;      &lt;/Code&gt;    &lt;/Snippet&gt;  &lt;/CodeSnippet&gt;&lt;/CodeSnippets\n\n\n\n\nVs2022快捷键：\n1.ctrl + k +f：非强制的，自己写的代码中自己调整的空格不能格式化\n2.ctrl + K +d：强制的\n\n顺序链表：#define _CRT_SECURE_NO_WARNINGS#define maxSise 100#include &lt;stdio.h&gt;//Seqlisttypedef struct &#123;\tint data[maxSise];\tint length;&#125;seqList;/// &lt;summary&gt;/// 初始化列表长度/// &lt;/summary&gt;/// &lt;param name=&quot;L&quot;&gt;列表&lt;/param&gt;void init_seqList(seqList* L) &#123;\tL-&gt;length = 0;&#125;/// &lt;summary&gt;/// /// &lt;/summary&gt;/// &lt;param name=&quot;L&quot;&gt;&lt;/param&gt;void create_seqList(seqList* L) &#123;\tprintf(&quot;请输入列表长度：&quot;);\tscanf(&quot;%d&quot;, &amp;L-&gt;length);\tprintf(&quot;请输入%d个元素：&quot;, L-&gt;length);\tfor (int i = 0; i &lt; L-&gt;length; i++)\t&#123;\t\tscanf(&quot;%d&quot;, &amp;L-&gt;data[i]);\t&#125;&#125;void for_seqlist(seqList* L) &#123;\tfor (int i = 0; i &lt; L-&gt;length; i++)\t&#123;\t\tprintf(&quot;第%d个元素为%d：\\n&quot;, i, L-&gt;data[i]);\t&#125;&#125;int empty(seqList* l) &#123;\treturn l-&gt;length == 0 ? 1 : 0;&#125;int length(seqList* l) &#123;\treturn l-&gt;length;&#125;/// &lt;summary&gt;/// 查/// &lt;/summary&gt;/// &lt;param name=&quot;l&quot;&gt;&lt;/param&gt;/// &lt;param name=&quot;val&quot;&gt;&lt;/param&gt;/// &lt;returns&gt;index&lt;/returns&gt;int find_val(seqList* l, int val) &#123;\tfor (int i = 0; i &lt; l-&gt;length; i++)\t&#123;\t\tif (l-&gt;data[i] == val) &#123;\t\t\treturn i;\t\t&#125;\t&#125;\treturn -1;&#125;/// &lt;summary&gt;/// /// &lt;/summary&gt;/// &lt;param name=&quot;l&quot;&gt;&lt;/param&gt;/// &lt;param name=&quot;pos&quot;&gt;查找位置 [0 , l-&gt;length-1] &lt;/param&gt;/// &lt;param name=&quot;res&quot;&gt;返回值&lt;/param&gt;/// &lt;returns&gt;val/returns&gt;int find_val_Pos(seqList* l, int pos, int* res) &#123;\tif (pos &lt; 0 || pos &gt;= l-&gt;length) &#123;\t\tprintf(&quot;pos 越界&quot;);\t\treturn 0;\t&#125;\t*res = l-&gt;data[pos];\treturn 1;&#125;/// &lt;summary&gt;/// 插入/// &lt;/summary&gt;/// &lt;param name=&quot;l&quot;&gt;&lt;/param&gt;/// &lt;param name=&quot;pos&quot;&gt;插入index位置[0 , l-&gt;length]&lt;/param&gt;/// &lt;param name=&quot;val&quot;&gt;&lt;/param&gt;int insert_val(seqList* l, int pos, int val) &#123;\t//插入位置和空间判断\tif (pos &gt; maxSise) &#123;\t\treturn 0;\t&#125;\tif (pos&lt;0 || pos&gt;l-&gt;length) return 0;\t//后退 pos取等不影响\tfor (int i = l-&gt;length; i &gt; pos; i--)\t&#123;\t\tl-&gt;data[i] = l-&gt;data[i - 1];\t&#125;\tl-&gt;data[pos] = val;\tl-&gt;length++;\treturn 1;&#125;/// &lt;param name=&quot;l&quot;&gt;&lt;/param&gt;/// &lt;param name=&quot;index&quot;&gt; [0 to l-&gt;length-1] &lt;/param&gt;/// &lt;param name=&quot;ptr&quot;&gt;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;int delete_val(seqList* l, int index, int* ptr) &#123;\t//前移\tif (l-&gt;length == 0) return 0;\tif (index &lt; 0 || index &gt;= l-&gt;length)  return 0;\t*ptr = l-&gt;data[index];\tfor (int i = index + 1; i &lt; l-&gt;length; i++)\t&#123;\t\tl-&gt;data[i - 1] = l-&gt;data[i];\t&#125;\tl-&gt;length--;\treturn 1;&#125;int main()&#123;\tseqList L;\tinit_seqList(&amp;L);\tcreate_seqList(&amp;L);\tfor_seqlist(&amp;L);\tinsert_val(&amp;L, 1, 100);\tfor_seqlist(&amp;L);\tint val1 = -1;\tint* ptr = &amp;val1;\tfind_val_Pos(&amp;L, 0, ptr);\tprintf(&quot;/\\n&quot;);\tprintf(&quot;%d\\n&quot;, val1);\tint val = find_val(&amp;L, 2);\tprintf(&quot;pos:%d\\n&quot;, val);\tprintf(&quot;请删除1个:&quot;);\tint val2 = 0;\tint temp = 0;\tscanf(&quot;%d&quot;, &amp;val2);\tdelete_val(&amp;L, val2, &amp;temp);\tprintf(&quot;删除的值%d\\n&quot;, temp);\tfor_seqlist(&amp;L);\tprintf(&quot;\\n&quot;);\tsystem(&quot;pause&quot;);\treturn 0;&#125;\n\n"}]